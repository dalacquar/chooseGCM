[{"path":"https://luizesser.github.io/chooseGCM/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 chooseGCM authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://luizesser.github.io/chooseGCM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Luíz Fernando Esser. Maintainer.","code":""},{"path":"https://luizesser.github.io/chooseGCM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Esser LF, Bailly D, Lima MR, Ré R (2024). chooseGCM: chooseGCM: package selecting General Circulation Models Species Distribution Modeling R. R package version 1.0, https://luizesser.github.io/chooseGCM/.","code":"@Manual{,   title = {chooseGCM: chooseGCM: A package for selecting General Circulation Models for Species Distribution Modeling in R},   author = {Luíz Fernando Esser and Dayani Bailly and Marcos Robalinho Lima and Reginaldo Ré},   year = {2024},   note = {R package version 1.0},   url = {https://luizesser.github.io/chooseGCM/}, }"},{"path":"https://luizesser.github.io/chooseGCM/index.html","id":"choosegcm-an-r-package-with-a-toolkit-to-select-general-circulation-models","dir":"","previous_headings":"","what":"chooseGCM: A package for selecting General Circulation Models for Species Distribution Modeling in R","title":"chooseGCM: A package for selecting General Circulation Models for Species Distribution Modeling in R","text":"goal chooseGCM help researchers aiming project Species Distribution Models Ecological Niche Models future scenarios applying selection routine General Circulation Models.","code":""},{"path":"https://luizesser.github.io/chooseGCM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"chooseGCM: A package for selecting General Circulation Models for Species Distribution Modeling in R","text":"can install development version chooseGCM GitHub :","code":"install.packages(\"devtools\") devtools::install_github(\"luizesser/chooseGCM\")"},{"path":"https://luizesser.github.io/chooseGCM/index.html","id":"tutorial","dir":"","previous_headings":"","what":"Tutorial","title":"chooseGCM: A package for selecting General Circulation Models for Species Distribution Modeling in R","text":"basic tutorial shows use functions chooseGCM. installing package, need open :","code":"library(chooseGCM) #> Warning: replacing previous import 'dplyr::union' by 'raster::union' when #> loading 'chooseGCM' #> Warning: replacing previous import 'dplyr::intersect' by 'raster::intersect' #> when loading 'chooseGCM' #> Warning: replacing previous import 'ggpubr::rotate' by 'raster::rotate' when #> loading 'chooseGCM' #> Warning: replacing previous import 'dplyr::select' by 'raster::select' when #> loading 'chooseGCM' #> Warning: replacing previous import 'raster::predict' by 'stats::predict' when #> loading 'chooseGCM' #> Warning: replacing previous import 'dplyr::lag' by 'stats::lag' when loading #> 'chooseGCM' #> Warning: replacing previous import 'raster::quantile' by 'stats::quantile' when #> loading 'chooseGCM' #> Warning: replacing previous import 'dplyr::filter' by 'stats::filter' when #> loading 'chooseGCM' #> Warning: replacing previous import 'raster::aggregate' by 'stats::aggregate' #> when loading 'chooseGCM' #> Warning: replacing previous import 'raster::weighted.mean' by #> 'stats::weighted.mean' when loading 'chooseGCM' #> Warning: replacing previous import 'raster::density' by 'stats::density' when #> loading 'chooseGCM' #> Warning: replacing previous import 'raster::update' by 'stats::update' when #> loading 'chooseGCM' #> Warning: replacing previous import 'raster::tail' by 'utils::tail' when loading #> 'chooseGCM' #> Warning: replacing previous import 'raster::stack' by 'utils::stack' when #> loading 'chooseGCM' #> Warning: replacing previous import 'raster::head' by 'utils::head' when loading #> 'chooseGCM' #> Warning: replacing previous import 'raster::unstack' by 'utils::unstack' when #> loading 'chooseGCM'"},{"path":"https://luizesser.github.io/chooseGCM/index.html","id":"downloading-worldclim-21-data","dir":"","previous_headings":"Tutorial","what":"Downloading WorldClim 2.1 Data","title":"chooseGCM: A package for selecting General Circulation Models for Species Distribution Modeling in R","text":"First, need use one time period. use 2090 difference models conspicuous. way considering SSP585, dramatic pathway. resolution lowest quicker. aim maintain parameters equal, General Circulation Models (GCMs). way know source variation comes . Note receive timeout error can increase timeout value running , 600 value seconds enough download data.","code":"WorldClim_data(period = \"future\", variable = \"bioc\", year = \"2090\", gcm = \"all\", ssp = \"585\", resolution = 10)"},{"path":"https://luizesser.github.io/chooseGCM/index.html","id":"importing-and-transforming-data","dir":"","previous_headings":"Tutorial","what":"Importing and Transforming Data","title":"chooseGCM: A package for selecting General Circulation Models for Species Distribution Modeling in R","text":"Now let’s import GCMs R list stacks name list names GCMs. function, data transformed. always need provide least: (1) list stacks, (2) variables want use analysis (3) shapefile study area. don’t need previously mask subset data, functions perform task internally . Note results functions highly sensitive variables study area. sense, decision variables considered study area must carefully made considering biological aspects studied group.","code":"s <- import_gcms() names(s) <- gsub(\"_ssp585_10_2090\", \"\", names(s)) var_names <- c(\"bio05\", \"bio13\", \"bio15\") study_area_parana <- sf::st_read(\"input_data/PR_UF_2022.shp\")"},{"path":"https://luizesser.github.io/chooseGCM/index.html","id":"straigthforward-approach","dir":"","previous_headings":"Tutorial","what":"Straigthforward Approach","title":"chooseGCM: A package for selecting General Circulation Models for Species Distribution Modeling in R","text":"option run function separate better understand happening better parameterize step. However wrapper help run everything alternative broad perspective. compare_gcms() return list vector called suggested_gcms Figure called statistics_gcms. suggest Figure also included supplementary data studies using package.  aim function inform minimum required users can follow workflow straightforward fashion (plot ). see D plot Figure, can infer selected GCMs encompass environmental variety GCMs. focus cover core environment outlier regions environmental space. , plot B, Monte Carlo permutation GCMs presented violin plot. Plots C clusterization methods can used select GCMs. Clusterization adapted number clusters k designated function. Lastly, suggested GCMs “uk”, “ml” “ac”. suggestions gcms closer centroid K-means cluster, thus better represent variation within cluster.","code":"res <- compare_gcms(s, var_names, study_area_parana, k = 3) #> Warning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as #> of ggplot2 3.3.4. #> ℹ The deprecated feature was likely used in the factoextra package. #>   Please report the issue at <https://github.com/kassambara/factoextra/issues>. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. res$statistics_gcms"},{"path":"https://luizesser.github.io/chooseGCM/index.html","id":"deep-dive-approach","dir":"","previous_headings":"Tutorial","what":"Deep-dive Approach","title":"chooseGCM: A package for selecting General Circulation Models for Species Distribution Modeling in R","text":"alternative experienced modelers want deeply understand impacts decisions GCMs selection, prepared set functions analyze data carefully. function wrapper mentioned available explored stand-alone, ranging exploratory analysis cluster analysis methods determine optimum number clusters.","code":""},{"path":"https://luizesser.github.io/chooseGCM/index.html","id":"exploratory-analysis","dir":"","previous_headings":"Tutorial > Deep-dive Approach","what":"Exploratory Analysis","title":"chooseGCM: A package for selecting General Circulation Models for Species Distribution Modeling in R","text":"chooseGCM implemented functions analyze GCMs attributes. summary_gcms function available describes variations within GCMs. returns internal information regarding variable, reads: minimum value (min), first quartile (quantile_0.25), second quartile (median), average (mean), third quartile (quantile_0.75), maximum value (max), standard deviation (sd), number NAs (NAs) total number cells (n_cells). function returns list GCMs table associated . Regarding exploratory comparison GCMs, two functions available: cor_gcms dist_gcms. first designed return list correlation matrix GCMs plot matrix. noticed building package (expected) Pearson correlation values always high, rarely reaching values bellow 0.95. way found function informative decided present distance function seen bellow. However noteworthy function user can change method used obtain correlation values. See ?cor_gcms available methods.  function dist_gcms similar previous cor_gcms, now distances. function output: list two slots. One distance matrix obtained (distances), second plotted matrix (heatmap). differences GCMs way clear previous plot. previous function, methods can also changed number different distances. complete list available methods see ?dist_gcms. build distance matrix considering multiple variables GCM use flattening strategy, values concatenated one unique vector GCM. process, need scale variables end measure. matrix also used calculate clusters compare_gcms function presented kmeans_gcms function.","code":"# Summary of GCMs s_sum <- summary_gcms(s, var_names, study_area_parana) s_sum #> $ac #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  30.26061      33.01390  35.02451  34.80212      36.42513  38.40598 #> bio13 224.12063     282.74970 313.23091 324.24229     368.32585 442.13201 #> bio15  21.40317      31.66128  36.05844  35.76401      39.83684  52.37042 #>              sd NAs n_cells #> bio05  1.984392 343     975 #> bio13 49.323508 343     975 #> bio15  6.124250 343     975 #>  #> $ae #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  28.72171      31.64461  33.82813  33.70744      35.54123  38.52787 #> bio13 164.11662     206.36238 234.51909 231.88477     253.38022 340.26649 #> bio15  14.10353      23.27106  26.92607  27.71403      32.05736  48.57550 #>              sd NAs n_cells #> bio05  2.341817 343     975 #> bio13 32.920944 343     975 #> bio15  6.629614 343     975 #>  #> $ca #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  32.62990      36.49244  39.98461  39.63354      42.59414  45.46806 #> bio13 134.25184     160.69164 177.39474 180.04803     195.73812 252.99690 #> bio15  26.38048      35.63326  41.19924  41.31525      46.43239  61.80791 #>              sd NAs n_cells #> bio05  3.405290 343     975 #> bio13 24.086040 343     975 #> bio15  7.466578 343     975 #>  #> $cc #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  32.86076      36.94869  40.39324  40.11279      43.12089  45.93269 #> bio13 132.89175     163.38650 175.39422 179.95447     192.31163 249.38172 #> bio15  26.39760      36.50399  41.36431  41.70356      46.65127  62.98824 #>              sd NAs n_cells #> bio05  3.468721 343     975 #> bio13 22.023718 343     975 #> bio15  7.492665 343     975 #>  #> $ce #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  28.49086      30.90774  33.32123  33.08078      34.98518  37.23296 #> bio13 160.09206     188.54479 207.32792 209.78494     226.39106 346.90099 #> bio15  22.64219      30.51760  34.49656  35.52471      39.34769  59.90047 #>              sd NAs n_cells #> bio05  2.303271 343     975 #> bio13 28.984064 343     975 #> bio15  7.128410 343     975 #>  #> $ch #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  30.29526      32.71605  35.01514  34.73141      36.57695  38.06917 #> bio13 161.80281     198.74798 226.59591 233.75398     262.41017 332.11823 #> bio15  22.31555      29.53830  33.89825  33.87370      37.33222  49.77581 #>              sd NAs n_cells #> bio05  2.159323 343     975 #> bio13 41.414470 343     975 #> bio15  5.503135 343     975 #>  #> $cn #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  29.83416      32.23992  34.13371  33.98563       35.6433  37.27494 #> bio13 163.08033     203.04138 231.56849 243.36138      282.9891 360.52124 #> bio15  21.91490      29.17356  33.61836  33.57262       37.3163  48.95621 #>              sd NAs n_cells #> bio05  1.940772 343     975 #> bio13 49.210449 343     975 #> bio15  5.383665 343     975 #>  #> $cr #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  29.73416      32.12476  33.76563  33.70309      35.23139  37.00658 #> bio13 165.68021     198.03851 224.10872 229.39616     257.07826 319.60043 #> bio15  18.27380      27.51016  32.76278  32.90503      37.67608  50.93997 #>              sd NAs n_cells #> bio05  1.800216 343     975 #> bio13 37.532586 343     975 #> bio15  6.818873 343     975 #>  #> $ec #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  28.05644      30.52174  33.39316  33.62745      36.40044  40.06277 #> bio13 153.43311     191.60708 220.34475 222.27008     248.99831 323.45767 #> bio15  23.85794      29.93092  32.78896  33.47820      37.01114  47.53911 #>              sd NAs n_cells #> bio05  3.256466 343     975 #> bio13 36.560327 343     975 #> bio15  4.603615 343     975 #>  #> $ev #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  28.29086      30.87917  34.06034  34.08671      36.90689  40.53250 #> bio13 145.59344     180.00812 201.42543 207.51134     230.57723 334.26770 #> bio15  24.86201      30.28744  33.70015  34.34216      37.43661  50.58348 #>              sd NAs n_cells #> bio05  3.359603 343     975 #> bio13 35.548106 343     975 #> bio15  4.857611 343     975 #>  #> $fi #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  29.01210      31.84949  33.83313  33.64331      35.26741  37.84391 #> bio13 174.65593     201.64553 219.94507 225.18894     251.17838 314.61781 #> bio15  19.08621      25.87605  29.58721  30.32712      33.61018  51.10931 #>              sd NAs n_cells #> bio05  2.023927 343     975 #> bio13 30.105078 343     975 #> bio15  6.063165 343     975 #>  #> $gg #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  28.35196      30.77980  32.79452  32.60924      34.28063  36.15628 #> bio13 153.75514     176.61163 196.54703 196.33973     212.15815 296.91739 #> bio15  11.78741      19.03363  22.44540  23.67124      27.45332  45.49844 #>              sd NAs n_cells #> bio05  2.004696 343     975 #> bio13 23.249518 343     975 #> bio15  6.517065 343     975 #>  #> $gh #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  28.21731      30.68337  32.73374  32.60451      34.37039  36.18172 #> bio13 147.10829     181.80839 208.58071 209.69143     237.33228 282.34803 #> bio15  19.85593      25.70747  28.00496  29.27738      32.68606  48.97674 #>              sd NAs n_cells #> bio05  2.117708 343     975 #> bio13 30.789909 343     975 #> bio15  5.440492 343     975 #>  #> $hg #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  31.13856      34.42890  36.70430  36.47516      38.43256  40.57494 #> bio13 169.04159     213.45747 236.87317 244.27400     275.88901 354.59307 #> bio15  15.53709      23.15852  27.00961  27.76471      31.46548  46.62684 #>              sd NAs n_cells #> bio05  2.310044 343     975 #> bio13 40.251235 343     975 #> bio15  6.005802 343     975 #>  #> $ic #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  28.70776      30.79083  32.44845  32.34917      33.80908  35.87494 #> bio13 147.30466     171.06382 186.87254 193.35761     212.68533 288.32870 #> bio15  14.58007      24.16027  27.83976  28.68280      32.59996  49.03214 #>              sd NAs n_cells #> bio05  1.811552 343     975 #> bio13 28.012579 343     975 #> bio15  6.635170 343     975 #>  #> $`in` #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  28.72848      30.82765  32.41980  32.40730      33.80212  36.47494 #> bio13 161.52419     185.46827 199.54241 202.64082     214.50042 351.75621 #> bio15  14.65916      23.77119  27.98068  28.64915      32.95829  50.70791 #>              sd NAs n_cells #> bio05  1.830847 343     975 #> bio13 24.217670 343     975 #> bio15  7.375416 343     975 #>  #> $ip #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  29.73416      32.68782  35.77748  35.48970      37.91489  40.41699 #> bio13 159.56344     181.32766 195.05749 197.40103     211.32161 284.26690 #> bio15  16.00507      26.77708  32.80609  33.31139      39.05771  60.27994 #>              sd NAs n_cells #> bio05  2.901743 343     975 #> bio13 20.271548 343     975 #> bio15  9.020713 343     975 #>  #> $me #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  27.62848      29.58797  31.27632  31.26874      32.73183  34.80598 #> bio13 156.52474     179.48378 199.96653 204.79726     226.42528 297.73651 #> bio15  16.15398      26.19266  28.80313  29.72263      33.38585  49.10374 #>              sd NAs n_cells #> bio05  1.837425 343     975 #> bio13 29.107648 343     975 #> bio15  6.231605 343     975 #>  #> $mi #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  29.78985      32.06696  32.97152  33.02705      34.02152  36.42464 #> bio13 161.00713     191.65730 209.20822 215.86132     239.70697 307.64819 #> bio15  16.95916      26.03894  29.28605  29.57971      32.96107  43.80171 #>              sd NAs n_cells #> bio05  1.402383 343     975 #> bio13 29.770515 343     975 #> bio15  5.266897 343     975 #>  #> $ml #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  28.50776      30.50234  32.24707  32.18487      33.70495  36.34391 #> bio13 148.63551     173.25150 188.91330 189.76359     202.15102 312.62540 #> bio15  18.31306      28.64226  32.92004  34.05128      39.09806  57.43911 #>              sd NAs n_cells #> bio05  1.888484 343     975 #> bio13 23.275037 343     975 #> bio15  8.098461 343     975 #>  #> $mp #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  28.37438      30.29746  31.96719  31.93173      33.45840  35.55591 #> bio13 156.99983     190.47906 208.26453 210.06902     228.44029 301.85869 #> bio15  15.56945      25.51134  29.19092  30.75855      35.40487  52.80058 #>              sd NAs n_cells #> bio05  1.866198 343     975 #> bio13 27.141968 343     975 #> bio15  7.543110 343     975 #>  #> $mr #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  28.09086      30.35537  32.03033  31.89886      33.33648  35.64391 #> bio13 168.56911     211.65106 243.65130 245.46815     277.43495 325.04975 #> bio15  19.00734      26.82087  32.25545  32.05659      36.88110  50.29647 #>              sd NAs n_cells #> bio05  1.751161 343     975 #> bio13 37.353812 343     975 #> bio15  6.804995 343     975 #>  #> $uk #>             min quantile_0.25    median      mean quantile_0.75       max #> bio05  31.22171      34.10035  36.20007  36.21587      38.23228  41.14654 #> bio13 157.72174     200.08367 228.58700 234.20227     265.91798 350.73710 #> bio15  17.88849      25.91104  30.26981  30.59170      34.71065  47.98321 #>              sd NAs n_cells #> bio05  2.404882 343     975 #> bio13 42.730072 343     975 #> bio15  6.175806 343     975 # Pearson Correlation between GCMs s_cor <- cor_gcms(s, var_names, study_area_parana, method = \"pearson\") s_cor #> $cor_matrix #>           ac        ae        ca        cc        ce        ch        cn #> ac 1.0000000 0.8168457 0.7377052 0.7699584 0.7123809 0.9260965 0.9730326 #> ae 0.8168457 1.0000000 0.9111641 0.8701274 0.9087373 0.8950387 0.8602279 #> ca 0.7377052 0.9111641 1.0000000 0.9529991 0.9185688 0.8071467 0.7644214 #> cc 0.7699584 0.8701274 0.9529991 1.0000000 0.8795839 0.8179988 0.7960723 #> ce 0.7123809 0.9087373 0.9185688 0.8795839 1.0000000 0.8352246 0.7633085 #> ch 0.9260965 0.8950387 0.8071467 0.8179988 0.8352246 1.0000000 0.9456752 #> cn 0.9730326 0.8602279 0.7644214 0.7960723 0.7633085 0.9456752 1.0000000 #> cr 0.9698425 0.8823095 0.8092755 0.8345769 0.7987614 0.9625161 0.9819558 #> ec 0.8422210 0.9178961 0.8103145 0.7971072 0.8113835 0.9032865 0.8776732 #> ev 0.8296694 0.9118506 0.8285572 0.8262468 0.8468423 0.9095587 0.8815798 #> fi 0.8586389 0.9217809 0.8727985 0.8661485 0.9061916 0.9096782 0.8969811 #> gg 0.8331262 0.9482198 0.8916034 0.8725616 0.9269122 0.8965138 0.8707006 #> gh 0.9083067 0.8235925 0.7446238 0.7655103 0.7284009 0.8769268 0.9105517 #> hg 0.8841268 0.9300254 0.8297376 0.8188666 0.8283096 0.9128693 0.9092986 #> ic 0.8998764 0.9209997 0.8800967 0.8789368 0.8799301 0.9481856 0.9259315 #> in 0.7170504 0.8942162 0.8614722 0.8742621 0.9051239 0.8129592 0.7650999 #> ip 0.6660920 0.8976136 0.9467857 0.9233185 0.9033274 0.7492696 0.6969025 #> me 0.8851458 0.9325317 0.8735989 0.8662006 0.8753405 0.9330303 0.9160118 #> mi 0.9316105 0.8946993 0.8115822 0.8254643 0.8139785 0.9415960 0.9401168 #> ml 0.7721328 0.9334139 0.9026873 0.8803522 0.9374324 0.8524023 0.8106532 #> mp 0.7888471 0.9486767 0.9236568 0.8726720 0.9367250 0.8627422 0.8257242 #> mr 0.9797531 0.7786801 0.7106341 0.7524977 0.6807161 0.9101279 0.9536606 #> uk 0.8685524 0.9426546 0.8601004 0.8417883 0.8437744 0.9204922 0.8997568 #>           cr        ec        ev        fi        gg        gh        hg #> ac 0.9698425 0.8422210 0.8296694 0.8586389 0.8331262 0.9083067 0.8841268 #> ae 0.8823095 0.9178961 0.9118506 0.9217809 0.9482198 0.8235925 0.9300254 #> ca 0.8092755 0.8103145 0.8285572 0.8727985 0.8916034 0.7446238 0.8297376 #> cc 0.8345769 0.7971072 0.8262468 0.8661485 0.8725616 0.7655103 0.8188666 #> ce 0.7987614 0.8113835 0.8468423 0.9061916 0.9269122 0.7284009 0.8283096 #> ch 0.9625161 0.9032865 0.9095587 0.9096782 0.8965138 0.8769268 0.9128693 #> cn 0.9819558 0.8776732 0.8815798 0.8969811 0.8707006 0.9105517 0.9092986 #> cr 1.0000000 0.8804530 0.8794786 0.9118943 0.9074008 0.9163500 0.9164136 #> ec 0.8804530 1.0000000 0.9769926 0.8907992 0.8628081 0.8313826 0.9417478 #> ev 0.8794786 0.9769926 1.0000000 0.9126548 0.8781098 0.8151110 0.9467112 #> fi 0.9118943 0.8907992 0.9126548 1.0000000 0.9538430 0.8706235 0.9527152 #> gg 0.9074008 0.8628081 0.8781098 0.9538430 1.0000000 0.8754215 0.9113567 #> gh 0.9163500 0.8313826 0.8151110 0.8706235 0.8754215 1.0000000 0.8670281 #> hg 0.9164136 0.9417478 0.9467112 0.9527152 0.9113567 0.8670281 1.0000000 #> ic 0.9544140 0.8542169 0.8733282 0.9321585 0.9472424 0.8615123 0.9096903 #> in 0.8086542 0.7657924 0.7981165 0.8842709 0.9293609 0.7204413 0.8320453 #> ip 0.7523479 0.7665815 0.7850480 0.8305166 0.8896283 0.7092065 0.7856322 #> me 0.9437898 0.8564719 0.8675465 0.9282559 0.9565043 0.8706964 0.9122721 #> mi 0.9680010 0.8700903 0.8720177 0.9161966 0.9222395 0.8720106 0.9228911 #> ml 0.8535342 0.8203916 0.8476937 0.9307982 0.9685639 0.8027943 0.8792123 #> mp 0.8553100 0.8362250 0.8552786 0.9428780 0.9497788 0.8110272 0.8935274 #> mr 0.9640562 0.8095983 0.7981135 0.8410090 0.8210487 0.9288927 0.8555727 #> uk 0.9139330 0.9531678 0.9622447 0.9360413 0.9068641 0.8348837 0.9845585 #>           ic        in        ip        me        mi        ml        mp #> ac 0.8998764 0.7170504 0.6660920 0.8851458 0.9316105 0.7721328 0.7888471 #> ae 0.9209997 0.8942162 0.8976136 0.9325317 0.8946993 0.9334139 0.9486767 #> ca 0.8800967 0.8614722 0.9467857 0.8735989 0.8115822 0.9026873 0.9236568 #> cc 0.8789368 0.8742621 0.9233185 0.8662006 0.8254643 0.8803522 0.8726720 #> ce 0.8799301 0.9051239 0.9033274 0.8753405 0.8139785 0.9374324 0.9367250 #> ch 0.9481856 0.8129592 0.7492696 0.9330303 0.9415960 0.8524023 0.8627422 #> cn 0.9259315 0.7650999 0.6969025 0.9160118 0.9401168 0.8106532 0.8257242 #> cr 0.9544140 0.8086542 0.7523479 0.9437898 0.9680010 0.8535342 0.8553100 #> ec 0.8542169 0.7657924 0.7665815 0.8564719 0.8700903 0.8203916 0.8362250 #> ev 0.8733282 0.7981165 0.7850480 0.8675465 0.8720177 0.8476937 0.8552786 #> fi 0.9321585 0.8842709 0.8305166 0.9282559 0.9161966 0.9307982 0.9428780 #> gg 0.9472424 0.9293609 0.8896283 0.9565043 0.9222395 0.9685639 0.9497788 #> gh 0.8615123 0.7204413 0.7092065 0.8706964 0.8720106 0.8027943 0.8110272 #> hg 0.9096903 0.8320453 0.7856322 0.9122721 0.9228911 0.8792123 0.8935274 #> ic 1.0000000 0.9026653 0.8307098 0.9895197 0.9666579 0.9193685 0.9174823 #> in 0.9026653 1.0000000 0.9034021 0.9105777 0.8679108 0.9562031 0.9111128 #> ip 0.8307098 0.9034021 1.0000000 0.8359167 0.7699188 0.9195820 0.9023435 #> me 0.9895197 0.9105777 0.8359167 1.0000000 0.9648281 0.9309497 0.9236060 #> mi 0.9666579 0.8679108 0.7699188 0.9648281 1.0000000 0.8895426 0.8761040 #> ml 0.9193685 0.9562031 0.9195820 0.9309497 0.8895426 1.0000000 0.9720941 #> mp 0.9174823 0.9111128 0.9023435 0.9236060 0.8761040 0.9720941 1.0000000 #> mr 0.8838154 0.7006355 0.6548661 0.8648326 0.9171438 0.7586856 0.7646548 #> uk 0.9210851 0.8390862 0.8073069 0.9226813 0.9231350 0.8840019 0.8962334 #>           mr        uk #> ac 0.9797531 0.8685524 #> ae 0.7786801 0.9426546 #> ca 0.7106341 0.8601004 #> cc 0.7524977 0.8417883 #> ce 0.6807161 0.8437744 #> ch 0.9101279 0.9204922 #> cn 0.9536606 0.8997568 #> cr 0.9640562 0.9139330 #> ec 0.8095983 0.9531678 #> ev 0.7981135 0.9622447 #> fi 0.8410090 0.9360413 #> gg 0.8210487 0.9068641 #> gh 0.9288927 0.8348837 #> hg 0.8555727 0.9845585 #> ic 0.8838154 0.9210851 #> in 0.7006355 0.8390862 #> ip 0.6548661 0.8073069 #> me 0.8648326 0.9226813 #> mi 0.9171438 0.9231350 #> ml 0.7586856 0.8840019 #> mp 0.7646548 0.8962334 #> mr 1.0000000 0.8359830 #> uk 0.8359830 1.0000000 #>  #> $cor_plot # Euclidean Distance between GCMs s_dist <- dist_gcms(s, var_names, study_area_parana, method = \"euclidean\") s_dist #> $distances #>           ac        ae        ca        cc        ce        ch        cn #> ae 32.707143                                                             #> ca 39.140733 22.778667                                                   #> cc 36.655338 27.541831 16.568653                                         #> ce 40.986695 23.087698 21.808682 26.520177                               #> ch 20.776218 24.759889 33.561982 32.604027 31.022743                     #> cn 12.550275 28.572241 37.093854 34.512167 37.181369 17.812842           #> cr 13.271861 26.218311 33.376232 31.083663 34.283861 14.796420 10.266041 #> ec 30.356987 21.898581 33.285196 34.424478 33.191273 23.767179 26.729749 #> ev 31.541357 22.690485 31.644171 31.856679 29.909107 22.983571 26.299469 #> fi 28.734191 21.374236 27.257134 27.960549 23.407494 22.968385 24.529719 #> gg 31.219657 17.390653 25.161810 27.282500 20.661243 24.585292 27.480983 #> gh 23.142104 32.099077 38.621068 37.008030 39.828890 26.811169 22.857050 #> hg 26.015100 20.216424 31.535047 32.526201 31.667009 22.558990 23.016600 #> ic 24.182563 21.480697 26.463647 26.591332 26.482020 17.396390 20.799399 #> in 40.652630 24.856716 28.444774 27.099869 23.540331 33.052339 37.040401 #> ip 44.161876 24.454303 17.629827 21.163098 23.762147 38.268161 42.075108 #> me 25.900459 19.851066 27.171245 27.955108 26.983401 19.777581 22.148444 #> mi 19.986133 24.799888 33.173783 31.928332 32.962154 18.469508 18.701929 #> ml 36.481694 19.720864 23.840688 26.435429 19.116512 29.361207 33.255472 #> mp 35.118232 17.313755 21.116365 27.270680 19.224281 28.314093 31.904550 #> mr 10.874614 35.953761 41.110974 38.021017 43.183969 22.911124 16.451637 #> uk 27.708338 18.301361 28.585272 30.398584 30.207183 21.549593 24.197000 #>           cr        ec        ev        fi        gg        gh        hg #> ae                                                                       #> ca                                                                       #> cc                                                                       #> ce                                                                       #> ch                                                                       #> cn                                                                       #> cr                                                                       #> ec 26.424293                                                             #> ev 26.531761 11.592261                                                   #> fi 22.684854 25.254976 22.586742                                         #> gg 23.256148 28.307286 26.682004 16.419229                               #> gh 22.103808 31.382339 32.861665 27.489182 26.974635                     #> hg 22.095405 18.445491 17.642174 16.618616 22.753968 27.868529           #> ic 16.317359 29.180164 27.200317 19.905906 17.554017 28.440657 22.966844 #> in 33.430555 36.985765 34.338754 25.998918 20.312187 40.408297 31.320608 #> ip 38.032516 36.923401 35.432744 31.462823 25.390012 41.212262 35.384566 #> me 18.119307 28.953603 27.814148 20.470443 15.938862 27.481428 22.636169 #> mi 13.671067 27.545767 27.340666 22.124063 21.311478 27.341426 21.221997 #> ml 29.248404 32.388987 29.825864 20.104477 13.550292 33.938592 26.561064 #> mp 29.070560 30.928430 29.073712 18.265674 17.126848 33.222605 24.937510 #> mr 14.489262 33.347980 34.339007 30.473361 32.329691 20.379388 29.044149 #> uk 22.420862 16.538897 14.849889 19.327865 23.323446 31.054825  9.496830 #>           ic        in        ip        me        mi        ml        mp #> ae                                                                       #> ca                                                                       #> cc                                                                       #> ce                                                                       #> ch                                                                       #> cn                                                                       #> cr                                                                       #> ec                                                                       #> ev                                                                       #> fi                                                                       #> gg                                                                       #> gh                                                                       #> hg                                                                       #> ic                                                                       #> in 23.843387                                                             #> ip 31.444883 23.752966                                                   #> me  7.823842 22.853730 30.957526                                         #> mi 13.955031 27.775869 36.658497 14.332823                               #> ml 21.701338 15.993958 21.672581 20.082460 25.399872                     #> mp 21.953689 22.785241 23.882772 21.123389 26.900647 12.766792           #> mr 26.050032 41.815202 44.898091 28.097650 21.998679 37.542716 37.075480 #> uk 21.469092 30.657076 33.548042 21.250854 21.188415 26.029118 24.618572 #>           mr #> ae           #> ca           #> cc           #> ce           #> ch           #> cn           #> cr           #> ec           #> ev           #> fi           #> gg           #> gh           #> hg           #> ic           #> in           #> ip           #> me           #> mi           #> ml           #> mp           #> mr           #> uk 30.951276 #>  #> $heatmap"},{"path":"https://luizesser.github.io/chooseGCM/index.html","id":"obtain-clusters","dir":"","previous_headings":"Tutorial > Deep-dive Approach","what":"Obtain Clusters","title":"chooseGCM: A package for selecting General Circulation Models for Species Distribution Modeling in R","text":"Clusters chooseGCM obtained K-means, unsupervised machine learning algorithm. K case number GCMs modeler wants use projections. previous dist_gcms function, can address different methods obtain distance matrix changing method argument. K-means algorithm uses distance matrix obtain clusters, thus deep analysis distances using dist_gcms function prove useful. compare_gcms function, function returns K-means plot set suggested GCMs, .e. GCMs closer centroid clusters.  Alternatively, instead using distances, one run analysis raw environmental data setting value method (note axis change). previous case, function also returns GCMs closer centroids. Note however plot cluster two GCMs, thus distance centroid. case, function randomly suggests one . perform analysis without distance matrix, use mean values variable selected. way, variability within variables considered, solution. recognize purpose useful plot raw variables axis provided .  can also obtain clusters hierarchical clustering. case, however, function doesn’t suggest GCM. user define GCMs suitable case. Hierarchical clustering useful visually inform relationship groups also used choose number clusters build (together metrics next section).  function also provide n argument inform amount data used clustering. proved valuable using high resolution data.","code":"kmeans_gcms(s, var_names, study_area_parana, k = 3, method = \"euclidean\") #> $suggested_gcms #>    1    2    3  #> \"uk\" \"ac\" \"ml\"  #>  #> $kmeans_plot kmeans_gcms(s, var_names, study_area_parana, k = 3) #> $suggested_gcms #> [1] \"ip\" \"ac\" \"uk\" #>  #> $kmeans_plot hclust_gcms(s, var_names, study_area_parana, k = 3) hclust_gcms(s, var_names, study_area_parana, k = 3, n = 1000)"},{"path":"https://luizesser.github.io/chooseGCM/index.html","id":"number-of-clusters","dir":"","previous_headings":"Tutorial > Deep-dive Approach","what":"Number of Clusters","title":"chooseGCM: A package for selecting General Circulation Models for Species Distribution Modeling in R","text":"many clusters good? three metrics implemented understand . way see minimum amount GCMs needed encompass variability whole set GCMs. three methods implemented function adjusting method argument. Within-cluster sum squares (wss) calculates internal variability within clusters. goal search minimum amount clusters minimum amount variability. shown graph line changes abruptly direction (Number clusters k = 3). previous function, function provides n argument inform amount data used clustering. Finally, one can also indicate method build clusters argument clusters. Available methods ‘kmeans’ (standard) ‘hclust’.  Average Silhouette Width method, measures mean distance individuals centroid clusters, comparing clusters. sometimes also referred metric cluster quality (higher better). number clusters best distance individuals within cluster centroid lower distance individuals clusters centroid (maximizing average silhouette width). method, best number clusters marked dashed line (2 clusters).  last method Gap Statistics. previous method, optimum number clusters showed dashed line (1 cluster). method compares variation within clusters set null clusters build Monte Carlo (“bootstrap”) sampling. , gap statistics can take longer time run compared previous methods described . Moreover, parameters can changed improve Monte Carlo process, : nstart, K.max B, nstart initial number arrangements compared, K.max maximum number clusters created B number bootstrap permutations.","code":"optk_gcms(s, var_names, study_area_parana, cluster = \"kmeans\", method = \"wss\", n = 1000) optk_gcms(s, var_names, study_area_parana, cluster = \"kmeans\", method = \"silhouette\", n = 1000) optk_gcms(s, var_names, study_area_parana, cluster = \"kmeans\", method = \"gap_stat\", n = 1000) #> Warning: did not converge in 10 iterations  #> Warning: did not converge in 10 iterations"},{"path":"https://luizesser.github.io/chooseGCM/index.html","id":"monte-carlo-permutations","dir":"","previous_headings":"Tutorial > Deep-dive Approach","what":"Monte Carlo permutations","title":"chooseGCM: A package for selecting General Circulation Models for Species Distribution Modeling in R","text":"alternative way analyse mean distance GCMs similar mean distance GCMs use montecarlo_gcms function. function build distance matrix (using method argument) plot mean distance GCMs blue line. Afterwards, run Monte Carlo permutation randomly choose group size ranging [2] [total number GCMs - 1] randomly choose subset GCMs group size. mean distance random set obtained ploted violin plot. Finally, function accesses mean distance selected GCMs using kmeans function possible values k plots red.","code":"montecarlo_gcms(s, var_names, study_area_parana, perm = 10000, method = \"euclidean\") #> $montecarlo_plot"},{"path":"https://luizesser.github.io/chooseGCM/index.html","id":"the-environment-covered-by-gcms-selection","dir":"","previous_headings":"Tutorial > Deep-dive Approach","what":"The environment covered by GCMs selection","title":"chooseGCM: A package for selecting General Circulation Models for Species Distribution Modeling in R","text":"also included package function called env_gcms, able project GCMs environmental space. , researchers able see coverage GCMs comparing GCMs. also possible see density GCMs using highlight=sum argument.","code":"env_gcms(s, var_names, study_area_parana, highlight = res$suggested_gcms) env_gcms(s, var_names, study_area_parana, highlight = \"sum\")"},{"path":"https://luizesser.github.io/chooseGCM/index.html","id":"wrapping-up","dir":"","previous_headings":"Tutorial > Deep-dive Approach","what":"Wrapping Up","title":"chooseGCM: A package for selecting General Circulation Models for Species Distribution Modeling in R","text":"analysis, can infer something two three clusters enough inform regarding environmental variation given GCMs. way, use GCMs CNRM-CM6-1 (cn), FIO-ESM-2-0 (fi) MPI-ESM1-2-HR (mp) project models future scenarios able inform decent variation projections.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/WorldClim_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download WorldClim v.2.1 bioclimatic data — worldclim_data","title":"Download WorldClim v.2.1 bioclimatic data — worldclim_data","text":"function allows download data WorldClim v.2.1 (https://www.worldclim.org/data/index.html) considering multiple GCMs, time periods SSPs.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/WorldClim_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download WorldClim v.2.1 bioclimatic data — worldclim_data","text":"","code":"worldclim_data(period = 'current', variable = 'bioc', year = '2030', gcm = 'mi', ssp = '126', resolution = 10, path=NULL)"},{"path":"https://luizesser.github.io/chooseGCM/reference/WorldClim_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download WorldClim v.2.1 bioclimatic data — worldclim_data","text":"period Can 'current' 'future'. variable Allows specify variables want retrieve Possible entries : 'tmax','tmin','prec' /'bioc'. year Specify year want retrieve data. Possible entries : '2030', '2050', '2070' /'2090'. can  use vector provide one entry. gcm GCMs considered future scenarios. can use vector provide one entry. ssp SSPs future data. Possible entries : '126', '245', '370' /'585'. can use vector provide one entry. resolution can select one resolution following alternatives: 10, 5, 2.5 30. path Directory path save downloads.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/WorldClim_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download WorldClim v.2.1 bioclimatic data — worldclim_data","text":"function create folder entitled 'worldclim_data'. data downloaded stored folder. Note , despite possible retrieve lot data , recommended , since data heavy.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/WorldClim_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download WorldClim v.2.1 bioclimatic data — worldclim_data","text":"https://www.worldclim.org/data/index.html","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/WorldClim_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download WorldClim v.2.1 bioclimatic data — worldclim_data","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/WorldClim_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download WorldClim v.2.1 bioclimatic data — worldclim_data","text":"","code":"if (FALSE) { # \\dontrun{ # download data from multiple periods: year <- c(2050, 2090) worldclim_data(\"bioc\", year, \"mi\", 126, 10)  # download data from one specific period worldclim_data(\"bioc\", 2070, \"mi\", 585, 10) } # }"},{"path":"https://luizesser.github.io/chooseGCM/reference/compare_gcms.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare GCMS — compare_gcms","title":"Compare GCMS — compare_gcms","text":"function compares future climate projections multiple Global Circulation Models (GCMs) based similarity terms bioclimatic variables. function clusters GCMs using k-means clustering hierarchical clustering, calculates Euclidean distance matrix, generates plots clusters distance matrix.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/compare_gcms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare GCMS — compare_gcms","text":"","code":"compare_gcms(s, var_names = c(\"bio_1\", \"bio_12\"), study_area = NULL, k = 3)"},{"path":"https://luizesser.github.io/chooseGCM/reference/compare_gcms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare GCMS — compare_gcms","text":"s list stacks General Circulation Models. var_names Character. vector names bioclimatic variables compare ''. study_area Extent object, object Extent object can extracted. object defines study area cropping masking rasters. k Numeric. number clusters use k-means clustering.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/compare_gcms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare GCMS — compare_gcms","text":"list two items: suggested_gcms (names GCMs suggested analysis) statistics_gcms (grid plots).","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/compare_gcms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compare GCMS — compare_gcms","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/compare_gcms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare GCMS — compare_gcms","text":"","code":"if (FALSE) { # \\dontrun{ # compare GCMS compare_gcms(   folder_future_rasters_gcms = \"path/to/folder\",   study_area = raster(\"path/to/raster\"),   var_names = c(\"bio_1\", \"bio_12\"),   gcm_names = c(\"gcm1\", \"gcm2\", \"gcm3\"),   k = 3 ) } # }"},{"path":"https://luizesser.github.io/chooseGCM/reference/cor_gcms.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and plot correlation matrix for a set of General Circulation Models. — cor_gcms","title":"Compute and plot correlation matrix for a set of General Circulation Models. — cor_gcms","text":"Compute plot correlation matrix set General Circulation Models.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/cor_gcms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and plot correlation matrix for a set of General Circulation Models. — cor_gcms","text":"","code":"cor_gcms(   s,   var_names = c(\"bio_1\", \"bio_12\"),   study_area = NULL,   method = \"pearson\" )"},{"path":"https://luizesser.github.io/chooseGCM/reference/cor_gcms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and plot correlation matrix for a set of General Circulation Models. — cor_gcms","text":"s list stacks General Circulation Models. var_names Character. vector names bioclimatic variables compare ''. study_area Extent object, object Extent object can extracted. object defines study area cropping masking rasters. method correlation method use. Default \"pearson\". Possible values \"pearson\", \"kendall\" \"spearman\".","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/cor_gcms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute and plot correlation matrix for a set of General Circulation Models. — cor_gcms","text":"list two items: cor_matrix (correlations GCMs) cor_plot (correlation plot).","code":""},{"path":[]},{"path":"https://luizesser.github.io/chooseGCM/reference/cor_gcms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute and plot correlation matrix for a set of General Circulation Models. — cor_gcms","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/cor_gcms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute and plot correlation matrix for a set of General Circulation Models. — cor_gcms","text":"","code":"if (FALSE) { # \\dontrun{ s <- list(stack(\"gcm1.tif\"), stack(\"gcm2.tif\"), stack(\"gcm3.tif\")) study_area <- extent(c(-57, -22, -48, -33)) var_names <- c(\"bio_1\", \"bio_12\") s <- transform_gcms(s, var_names, study_area) flattened_gcms <- flatten_gcms(s) cor_gcms(quick_example, method = \"spearman\") } # }"},{"path":"https://luizesser.github.io/chooseGCM/reference/dist_gcms.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance between GCMs — dist_gcms","title":"Distance between GCMs — dist_gcms","text":"function compares future climate projections multiple Global Circulation Models (GCMs) based similarity terms bioclimatic variables. function calculates distance metrics plot heatmap.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/dist_gcms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance between GCMs — dist_gcms","text":"","code":"dist_gcms(   s,   var_names = c(\"bio_1\", \"bio_12\"),   study_area = NULL,   method = \"euclidean\" )"},{"path":"https://luizesser.github.io/chooseGCM/reference/dist_gcms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance between GCMs — dist_gcms","text":"s list stacks General Circulation Models. var_names Character. vector names bioclimatic variables compare ''. study_area Extent object, object Extent object can extracted. object defines study area cropping masking rasters. method correlation method use. Default \"pearson\". Possible values \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\", \"minkowski\", \"pearson\", \"spearman\" \"kendall\".","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/dist_gcms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance between GCMs — dist_gcms","text":"list two items: distances (distances GCMs) heatmap (plot).","code":""},{"path":[]},{"path":"https://luizesser.github.io/chooseGCM/reference/dist_gcms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Distance between GCMs — dist_gcms","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/dist_gcms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance between GCMs — dist_gcms","text":"","code":"if (FALSE) { # \\dontrun{ s <- list(stack(\"gcm1.tif\"), stack(\"gcm2.tif\"), stack(\"gcm3.tif\")) study_area <- extent(c(-57, -22, -48, -33)) var_names <- c(\"bio_1\", \"bio_12\")  dist_gcms(s, method = \"euclidean\") } # }"},{"path":"https://luizesser.github.io/chooseGCM/reference/env_gcms.html","id":null,"dir":"Reference","previous_headings":"","what":"General Circulation Model (GCM) environmental distribution — env_gcms","title":"General Circulation Model (GCM) environmental distribution — env_gcms","text":"function plots GCMs data environmental space, possibly highlighting clusters specific GCMs.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/env_gcms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General Circulation Model (GCM) environmental distribution — env_gcms","text":"","code":"env_gcms(   s,   var_names = c(\"bio_1\", \"bio_12\"),   study_area = NULL,   highlight = \"sum\",   resolution = 25 )"},{"path":"https://luizesser.github.io/chooseGCM/reference/env_gcms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General Circulation Model (GCM) environmental distribution — env_gcms","text":"s list stacks General Circulation Models. var_names Character. vector names bioclimatic variables compare ''. study_area Extent object, object Extent object can extracted. object defines study area cropping masking rasters. highlight Character. vector names gcms highlighted. case, sum chosen GCMs appear grey. resolution Res","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/env_gcms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General Circulation Model (GCM) environmental distribution — env_gcms","text":"data frame summary statistics variable","code":""},{"path":[]},{"path":"https://luizesser.github.io/chooseGCM/reference/env_gcms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"General Circulation Model (GCM) environmental distribution — env_gcms","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/env_gcms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General Circulation Model (GCM) environmental distribution — env_gcms","text":"","code":"if (FALSE) { # \\dontrun{ s <- list(stack(\"gcm1.tif\"), stack(\"gcm2.tif\"), stack(\"gcm3.tif\")) study_area <- extent(c(-57, -22, -48, -33)) var_names <- c(\"bio_1\", \"bio_12\") env_gcms(s, var_names, study_area, highlight = \"sum\") env_gcms(s, var_names, study_area, highlight = c(\"cr\", \"ml\", \"uk\")) } # }"},{"path":"https://luizesser.github.io/chooseGCM/reference/flatten_gcms.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten GCMs — flatten_gcms","title":"Flatten GCMs — flatten_gcms","text":"Scale flatten list rasters (GCMs) vector.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/flatten_gcms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten GCMs — flatten_gcms","text":"","code":"flatten_gcms(s)"},{"path":"https://luizesser.github.io/chooseGCM/reference/flatten_gcms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten GCMs — flatten_gcms","text":"s list transformed data frames (GCMs)","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/flatten_gcms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten GCMs — flatten_gcms","text":"named list flattened data.frame","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/flatten_gcms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Flatten GCMs — flatten_gcms","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/flatten_gcms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flatten GCMs — flatten_gcms","text":"","code":"if (FALSE) { # \\dontrun{ s <- list(stack(\"gcm1.tif\"), stack(\"gcm2.tif\"), stack(\"gcm3.tif\")) study_area <- extent(c(-57, -22, -48, -33)) var_names <- c(\"bio_1\", \"bio_12\") s <- transform_gcms(s, var_names, study_area) flattened_gcms <- flatten_gcms(s) } # }"},{"path":"https://luizesser.github.io/chooseGCM/reference/hclust_gcms.html","id":null,"dir":"Reference","previous_headings":"","what":"Hierarchical Clustering of GCMs — hclust_gcms","title":"Hierarchical Clustering of GCMs — hclust_gcms","text":"function performs hierarchical clustering random subset raster values produces dendrogram visualization clusters.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/hclust_gcms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hierarchical Clustering of GCMs — hclust_gcms","text":"","code":"hclust_gcms(   s,   var_names = c(\"bio_1\", \"bio_12\"),   study_area = NULL,   k = 3,   n = NULL )"},{"path":"https://luizesser.github.io/chooseGCM/reference/hclust_gcms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hierarchical Clustering of GCMs — hclust_gcms","text":"s list stacks General Circulation Models. var_names Character. vector names bioclimatic variables compare ''. study_area Extent object, object Extent object can extracted. object defines study area cropping masking rasters. k number clusters identify. n number values use clustering. NULL (default) data used.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/hclust_gcms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hierarchical Clustering of GCMs — hclust_gcms","text":"dendrogram visualizing clusters.","code":""},{"path":[]},{"path":"https://luizesser.github.io/chooseGCM/reference/hclust_gcms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Hierarchical Clustering of GCMs — hclust_gcms","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/hclust_gcms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hierarchical Clustering of GCMs — hclust_gcms","text":"","code":"if (FALSE) { # \\dontrun{ s <- list(stack(\"gcm1.tif\"), stack(\"gcm2.tif\"), stack(\"gcm3.tif\")) study_area <- extent(c(-57, -22, -48, -33)) var_names <- c(\"bio_1\", \"bio_12\") dend <- hclust_gcms(stack, k = 4, n = 500) plot(dend) } # }"},{"path":"https://luizesser.github.io/chooseGCM/reference/import_gcms.html","id":null,"dir":"Reference","previous_headings":"","what":"Import GCM data to R — import_gcms","title":"Import GCM data to R — import_gcms","text":"function imports GCM stack files folder R.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/import_gcms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import GCM data to R — import_gcms","text":"","code":"import_gcms(   path = \"input_data/WorldClim_data_gcms\",   extension = \".tif\",   recursive = TRUE,   gcm_names = NULL,   var_names = NULL )"},{"path":"https://luizesser.github.io/chooseGCM/reference/import_gcms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import GCM data to R — import_gcms","text":"path string path GCM files. extension Extension stack files. Standard \".tif\", extension WorldClim 2.1. recursive Logical. function import stacks recursively (.e. search files folders within folders)? Standard TRUE. gcm_names vector names addressed GCM. var_names vector names addressed variable.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/import_gcms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import GCM data to R — import_gcms","text":"list stacks, element list corresponding GCM given path.","code":""},{"path":[]},{"path":"https://luizesser.github.io/chooseGCM/reference/import_gcms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import GCM data to R — import_gcms","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/import_gcms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import GCM data to R — import_gcms","text":"","code":"if (FALSE) { # \\dontrun{ s <- import_gcms(   path = \"input_data/WorldClim_data_future\", extension = \".tif\",   recursive = TRUE, gcm_names = NULL ) study_area <- extent(c(-57, -22, -48, -33)) var_names <- c(\"bio_1\", \"bio_12\") t <- transform_gcms(s, var_names, study_area) } # }"},{"path":"https://luizesser.github.io/chooseGCM/reference/kmeans_gcms.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform k-means clustering on GCMs — kmeans_gcms","title":"Perform k-means clustering on GCMs — kmeans_gcms","text":"function performs k-means clustering distance matrix produces scatter plot resulting clusters.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/kmeans_gcms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform k-means clustering on GCMs — kmeans_gcms","text":"","code":"kmeans_gcms(   s,   var_names = c(\"bio_1\", \"bio_12\"),   study_area = NULL,   k = 3,   method = NULL )"},{"path":"https://luizesser.github.io/chooseGCM/reference/kmeans_gcms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform k-means clustering on GCMs — kmeans_gcms","text":"s list stacks General Circulation Models. var_names Character. vector names bioclimatic variables compare ''. study_area Extent object, object Extent object can extracted. object defines study area cropping masking rasters. k Number clusters. method method distance matrix computation. Standard value \"euclidean\". Possible values : \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\" \"minkowski\". NULL, perform clustering raw variables data.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/kmeans_gcms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform k-means clustering on GCMs — kmeans_gcms","text":"scatter plot resulting clusters.","code":""},{"path":[]},{"path":"https://luizesser.github.io/chooseGCM/reference/kmeans_gcms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform k-means clustering on GCMs — kmeans_gcms","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/kmeans_gcms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform k-means clustering on GCMs — kmeans_gcms","text":"","code":"if (FALSE) { # \\dontrun{ s <- list(stack(\"gcm1.tif\"), stack(\"gcm2.tif\"), stack(\"gcm3.tif\")) study_area <- extent(c(-57, -22, -48, -33)) var_names <- c(\"bio_1\", \"bio_12\")  kmeans_gcms(s, k = 3) } # }"},{"path":"https://luizesser.github.io/chooseGCM/reference/montecarlo_gcms.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Monte Carlo permutations on GCMs — montecarlo_gcms","title":"Perform Monte Carlo permutations on GCMs — montecarlo_gcms","text":"function performs Monte Carlo permutations distance matrix produces violin plot resulting mean distance subsets distance matrix.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/montecarlo_gcms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Monte Carlo permutations on GCMs — montecarlo_gcms","text":"","code":"montecarlo_gcms(   s,   var_names = c(\"bio_1\", \"bio_12\"),   study_area = NULL,   perm = 10000,   method = \"euclidean\" )"},{"path":"https://luizesser.github.io/chooseGCM/reference/montecarlo_gcms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Monte Carlo permutations on GCMs — montecarlo_gcms","text":"s list stacks General Circulation Models. var_names Character. vector names bioclimatic variables compare ''. study_area Extent object, object Extent object can extracted. object defines study area cropping masking rasters. perm Number permutations. method method distance matrix computation. Standard value \"euclidean\". Possible values : \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\" \"minkowski\". NULL, perform clustering raw variables data.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/montecarlo_gcms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Monte Carlo permutations on GCMs — montecarlo_gcms","text":"violin plot result. Dashed red line red dots represent mean distance selected GCMs using kmeans approach. blue line mean distance GCMs (.e. using available GCMs). Violin plot built Monte Carlo permutations, selecting random subsets GCMs given set.","code":""},{"path":[]},{"path":"https://luizesser.github.io/chooseGCM/reference/montecarlo_gcms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform Monte Carlo permutations on GCMs — montecarlo_gcms","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/montecarlo_gcms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Monte Carlo permutations on GCMs — montecarlo_gcms","text":"","code":"if (FALSE) { # \\dontrun{ s <- list(stack(\"gcm1.tif\"), stack(\"gcm2.tif\"), stack(\"gcm3.tif\")) study_area <- extent(c(-57, -22, -48, -33)) var_names <- c(\"bio_1\", \"bio_12\")  montecarlo_gcms(s, study_area = study_area) } # }"},{"path":"https://luizesser.github.io/chooseGCM/reference/optk_gcms.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize number of clusters for a dataset — optk_gcms","title":"Optimize number of clusters for a dataset — optk_gcms","text":"function performs clustering analysis dataset determines optimal number clusters based specified method.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/optk_gcms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize number of clusters for a dataset — optk_gcms","text":"","code":"optk_gcms(   s,   var_names = c(\"bio_1\", \"bio_12\"),   study_area = NULL,   cluster = \"kmeans\",   method = \"wss\",   n = NULL,   nstart = 10,   K.max = 10,   B = 100 )"},{"path":"https://luizesser.github.io/chooseGCM/reference/optk_gcms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize number of clusters for a dataset — optk_gcms","text":"s list stacks General Circulation Models. var_names Character. vector names bioclimatic variables compare ''. study_area Extent object, object Extent object can extracted. object defines study area cropping masking rasters. cluster character string specifying method build clusters. Options 'kmeans' (standard) 'hclust'. method character string specifying method use determining optimal number clusters. Options 'wss' within-cluster sum squares, 'silhouette' average silhouette width 'gap_stat' gap statistic method. Default 'wss'. n integer specifying number randomly selected samples use clustering analysis. NULL (default) data used. nstart K.max B ","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/optk_gcms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize number of clusters for a dataset — optk_gcms","text":"ggplot object representing optimal number clusters.","code":""},{"path":[]},{"path":"https://luizesser.github.io/chooseGCM/reference/optk_gcms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Optimize number of clusters for a dataset — optk_gcms","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/optk_gcms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimize number of clusters for a dataset — optk_gcms","text":"","code":"if (FALSE) { # \\dontrun{ s <- list(stack(\"gcm1.tif\"), stack(\"gcm2.tif\"), stack(\"gcm3.tif\")) study_area <- extent(c(-57, -22, -48, -33)) var_names <- c(\"bio_1\", \"bio_12\")  optk_gcms(flattened_gcms) } # }"},{"path":"https://luizesser.github.io/chooseGCM/reference/summary_gcms.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize General Circulation Model (GCM) data — summary_gcms","title":"Summarize General Circulation Model (GCM) data — summary_gcms","text":"function summarizes GCM data calculating several statistics variable","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/summary_gcms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize General Circulation Model (GCM) data — summary_gcms","text":"","code":"summary_gcms(s, var_names = c(\"bio_1\", \"bio_12\"), study_area = NULL)"},{"path":"https://luizesser.github.io/chooseGCM/reference/summary_gcms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize General Circulation Model (GCM) data — summary_gcms","text":"s list stacks General Circulation Models. var_names Character. vector names bioclimatic variables compare ''. study_area Extent object, object Extent object can extracted. object defines study area cropping masking rasters.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/summary_gcms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize General Circulation Model (GCM) data — summary_gcms","text":"data frame summary statistics variable","code":""},{"path":[]},{"path":"https://luizesser.github.io/chooseGCM/reference/summary_gcms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarize General Circulation Model (GCM) data — summary_gcms","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/summary_gcms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize General Circulation Model (GCM) data — summary_gcms","text":"","code":"if (FALSE) { # \\dontrun{ s <- list(stack(\"gcm1.tif\"), stack(\"gcm2.tif\"), stack(\"gcm3.tif\")) study_area <- extent(c(-57, -22, -48, -33)) var_names <- c(\"bio_1\", \"bio_12\") s <- transform_gcms(s, var_names, study_area) summary_gcms(s) } # }"},{"path":"https://luizesser.github.io/chooseGCM/reference/transform_gcms.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform General Circulation Model (GCM) stacks — transform_gcms","title":"Transform General Circulation Model (GCM) stacks — transform_gcms","text":"function transforms list stacks GCMs subsetting include variable names specified var_names, reprojecting match CRS study_area, cropping masking study_area, returning list data frames.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/transform_gcms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform General Circulation Model (GCM) stacks — transform_gcms","text":"","code":"transform_gcms(s, var_names = c(\"bio_1\", \"bio_12\"), study_area = NULL)"},{"path":"https://luizesser.github.io/chooseGCM/reference/transform_gcms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform General Circulation Model (GCM) stacks — transform_gcms","text":"s list stacks General Circulation Models. var_names Character. vector names bioclimatic variables compare ''. study_area Extent object, object Extent object can extracted. object defines study area cropping masking rasters.","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/transform_gcms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform General Circulation Model (GCM) stacks — transform_gcms","text":"list data frames, element list corresponding GCM input list.","code":""},{"path":[]},{"path":"https://luizesser.github.io/chooseGCM/reference/transform_gcms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transform General Circulation Model (GCM) stacks — transform_gcms","text":"Luíz Fernando Esser (luizesser@gmail.com) https://luizfesser.wordpress.com","code":""},{"path":"https://luizesser.github.io/chooseGCM/reference/transform_gcms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform General Circulation Model (GCM) stacks — transform_gcms","text":"","code":"if (FALSE) { # \\dontrun{ s <- list(stack(\"gcm1.tif\"), stack(\"gcm2.tif\"), stack(\"gcm3.tif\")) study_area <- extent(c(-57, -22, -48, -33)) var_names <- c(\"bio_1\", \"bio_12\") t <- transform_gcms(s, var_names, study_area) } # }"}]
